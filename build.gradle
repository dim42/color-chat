buildscript {
    ext {
        kotlinVersion = '1.3.0-rc-80'
        springBootVersion = '2.0.5.RELEASE'
        springLoadedVersion = '1.2.8.RELEASE'
        codehausGroovyVersion = '2.5.3'
        spockVersion = '1.2-groovy-2.5'
    }
    ext['groovy.version'] = '2.5.3'
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'java'
    id 'groovy'
}
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

def gradleWrapperVersion = '4.10.2'
def langLevel = 1.8

version = '0.0.1-SNAPSHOT'
wrapper.setGradleVersion(gradleWrapperVersion)
sourceCompatibility = langLevel
compileKotlin {
    kotlinOptions.jvmTarget = "$langLevel"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "$langLevel"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
}

dependencies {
    compile(
            'org.springframework.boot:spring-boot-starter',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-thymeleaf',

            'org.springframework.boot:spring-boot-devtools',
            "org.springframework:springloaded:${springLoadedVersion}",
            'org.springframework.boot:spring-boot-starter-actuator',
            "org.codehaus.groovy:groovy-all:${codehausGroovyVersion}",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    )

    runtime('org.springframework.boot:spring-boot-devtools')

    testCompile(
            'org.springframework.boot:spring-boot-starter-test',
            "org.spockframework:spock-core:${spockVersion}"
    )
}
